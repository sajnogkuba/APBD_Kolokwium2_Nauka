// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Przykład3.Contexts;

#nullable disable

namespace Przykład3.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240613122040_add test data")]
    partial class addtestdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Przykład3.Models.BoatStandard", b =>
                {
                    b.Property<int>("BoatStandardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBoatStandard");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoatStandardId"));

                    b.Property<int>("BoatStandardLevel")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("BoatStandardName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("BoatStandardId");

                    b.ToTable("BoatStandard");

                    b.HasData(
                        new
                        {
                            BoatStandardId = 1,
                            BoatStandardLevel = 1,
                            BoatStandardName = "Test"
                        },
                        new
                        {
                            BoatStandardId = 2,
                            BoatStandardLevel = 2,
                            BoatStandardName = "Test2"
                        },
                        new
                        {
                            BoatStandardId = 3,
                            BoatStandardLevel = 3,
                            BoatStandardName = "Test3"
                        });
                });

            modelBuilder.Entity("Przykład3.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdClient");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime>("ClientBirthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("Birthday");

                    b.Property<int>("ClientCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("IdClientCategory");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LastName");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("ClientPesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Pesel");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientCategoryId");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            ClientBirthday = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientCategoryId = 1,
                            ClientEmail = "test@gmail.com",
                            ClientLastName = "Test",
                            ClientName = "Test",
                            ClientPesel = "54345678901"
                        },
                        new
                        {
                            ClientId = 2,
                            ClientBirthday = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientCategoryId = 2,
                            ClientEmail = "test2@gmail.com",
                            ClientLastName = "Test2",
                            ClientName = "Test2",
                            ClientPesel = "12345678901"
                        },
                        new
                        {
                            ClientId = 3,
                            ClientBirthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientCategoryId = 3,
                            ClientEmail = "tes3@gmail.com",
                            ClientLastName = "Test3",
                            ClientName = "Test3",
                            ClientPesel = "69345678901"
                        });
                });

            modelBuilder.Entity("Przykład3.Models.ClientCategory", b =>
                {
                    b.Property<int>("ClientCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdClientCategory");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientCategoryId"));

                    b.Property<int>("ClientCategoryDiscountPercentage")
                        .HasColumnType("int")
                        .HasColumnName("DiscountPerc");

                    b.Property<string>("ClientCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("ClientCategoryId");

                    b.ToTable("ClientCategory");

                    b.HasData(
                        new
                        {
                            ClientCategoryId = 1,
                            ClientCategoryDiscountPercentage = 10,
                            ClientCategoryName = "Test"
                        },
                        new
                        {
                            ClientCategoryId = 2,
                            ClientCategoryDiscountPercentage = 20,
                            ClientCategoryName = "Test2"
                        },
                        new
                        {
                            ClientCategoryId = 3,
                            ClientCategoryDiscountPercentage = 30,
                            ClientCategoryName = "Test3"
                        });
                });

            modelBuilder.Entity("Przykład3.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdReservation");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("ReservationBoatStandardId")
                        .HasColumnType("int")
                        .HasColumnName("IdBoatStandard");

                    b.Property<string>("ReservationCancelReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CancelReason");

                    b.Property<int>("ReservationCapacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<int>("ReservationClientId")
                        .HasColumnType("int")
                        .HasColumnName("IdClient");

                    b.Property<DateTime>("ReservationDateFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateFrom");

                    b.Property<DateTime>("ReservationDateTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateTo");

                    b.Property<bool>("ReservationFulfilled")
                        .HasColumnType("bit")
                        .HasColumnName("Fulfilled");

                    b.Property<int>("ReservationNumOfBoats")
                        .HasColumnType("int")
                        .HasColumnName("NumOfBoats");

                    b.Property<decimal>("ReservationPrice")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservationBoatStandardId");

                    b.HasIndex("ReservationClientId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            ReservationBoatStandardId = 1,
                            ReservationCapacity = 1,
                            ReservationClientId = 1,
                            ReservationDateFrom = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationDateTo = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationFulfilled = false,
                            ReservationNumOfBoats = 3,
                            ReservationPrice = 100m
                        },
                        new
                        {
                            ReservationId = 2,
                            ReservationBoatStandardId = 2,
                            ReservationCapacity = 3,
                            ReservationClientId = 2,
                            ReservationDateFrom = new DateTime(2024, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationDateTo = new DateTime(2024, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationFulfilled = true,
                            ReservationNumOfBoats = 2,
                            ReservationPrice = 300m
                        },
                        new
                        {
                            ReservationId = 3,
                            ReservationBoatStandardId = 3,
                            ReservationCancelReason = "TEST",
                            ReservationCapacity = 13,
                            ReservationClientId = 1,
                            ReservationDateFrom = new DateTime(2024, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationDateTo = new DateTime(2024, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReservationFulfilled = true,
                            ReservationNumOfBoats = 5,
                            ReservationPrice = 1300m
                        });
                });

            modelBuilder.Entity("Przykład3.Models.Sailboat", b =>
                {
                    b.Property<int>("SailboatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSailboat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SailboatId"));

                    b.Property<int>("SailboatBoatStandardId")
                        .HasColumnType("int")
                        .HasColumnName("IdBoatStandard");

                    b.Property<int>("SailboatCapacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<string>("SailboatDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Description");

                    b.Property<string>("SailboatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<decimal>("SailboatPrice")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.HasKey("SailboatId");

                    b.HasIndex("SailboatBoatStandardId");

                    b.ToTable("Sailboat");

                    b.HasData(
                        new
                        {
                            SailboatId = 1,
                            SailboatBoatStandardId = 1,
                            SailboatCapacity = 1,
                            SailboatDescription = "Test",
                            SailboatName = "Test",
                            SailboatPrice = 100m
                        },
                        new
                        {
                            SailboatId = 2,
                            SailboatBoatStandardId = 2,
                            SailboatCapacity = 2,
                            SailboatDescription = "Test2",
                            SailboatName = "Test2",
                            SailboatPrice = 200m
                        },
                        new
                        {
                            SailboatId = 3,
                            SailboatBoatStandardId = 3,
                            SailboatCapacity = 3,
                            SailboatDescription = "Test3",
                            SailboatName = "Test3",
                            SailboatPrice = 300m
                        });
                });

            modelBuilder.Entity("Przykład3.Models.SailboatReservation", b =>
                {
                    b.Property<int>("SailboatReservationSailboatId")
                        .HasColumnType("int")
                        .HasColumnName("IdSailboat");

                    b.Property<int>("SailboatReservationReservationId")
                        .HasColumnType("int")
                        .HasColumnName("IdReservation");

                    b.HasKey("SailboatReservationSailboatId", "SailboatReservationReservationId");

                    b.HasIndex("SailboatReservationReservationId");

                    b.ToTable("Saleboat_Reservation");

                    b.HasData(
                        new
                        {
                            SailboatReservationSailboatId = 1,
                            SailboatReservationReservationId = 1
                        },
                        new
                        {
                            SailboatReservationSailboatId = 2,
                            SailboatReservationReservationId = 2
                        },
                        new
                        {
                            SailboatReservationSailboatId = 3,
                            SailboatReservationReservationId = 2
                        },
                        new
                        {
                            SailboatReservationSailboatId = 1,
                            SailboatReservationReservationId = 2
                        },
                        new
                        {
                            SailboatReservationSailboatId = 1,
                            SailboatReservationReservationId = 3
                        },
                        new
                        {
                            SailboatReservationSailboatId = 2,
                            SailboatReservationReservationId = 3
                        });
                });

            modelBuilder.Entity("Przykład3.Models.Client", b =>
                {
                    b.HasOne("Przykład3.Models.ClientCategory", "ClientCategory")
                        .WithMany("Clients")
                        .HasForeignKey("ClientCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCategory");
                });

            modelBuilder.Entity("Przykład3.Models.Reservation", b =>
                {
                    b.HasOne("Przykład3.Models.BoatStandard", "BoatStandard")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationBoatStandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Przykład3.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandard");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Przykład3.Models.Sailboat", b =>
                {
                    b.HasOne("Przykład3.Models.BoatStandard", "BoatStandard")
                        .WithMany("Sailboats")
                        .HasForeignKey("SailboatBoatStandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandard");
                });

            modelBuilder.Entity("Przykład3.Models.SailboatReservation", b =>
                {
                    b.HasOne("Przykład3.Models.Reservation", "Reservation")
                        .WithMany("SailboatReservations")
                        .HasForeignKey("SailboatReservationReservationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Przykład3.Models.Sailboat", "Sailboat")
                        .WithMany("SailboatReservations")
                        .HasForeignKey("SailboatReservationSailboatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Sailboat");
                });

            modelBuilder.Entity("Przykład3.Models.BoatStandard", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Sailboats");
                });

            modelBuilder.Entity("Przykład3.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Przykład3.Models.ClientCategory", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Przykład3.Models.Reservation", b =>
                {
                    b.Navigation("SailboatReservations");
                });

            modelBuilder.Entity("Przykład3.Models.Sailboat", b =>
                {
                    b.Navigation("SailboatReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
