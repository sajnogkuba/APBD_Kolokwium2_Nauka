// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Przykład2.Contexts;

#nullable disable

namespace Przykład2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Przykład2.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAlbum");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"));

                    b.Property<DateTime>("DataWydania")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataWydania");

                    b.Property<int>("IdWytwornia")
                        .HasColumnType("int")
                        .HasColumnName("IdWytwornia");

                    b.Property<string>("NazwaAlbumu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NazwaAlbumu");

                    b.HasKey("IdAlbum");

                    b.HasIndex("IdWytwornia");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("Przykład2.Models.Muzyk", b =>
                {
                    b.Property<int>("IdMuzyk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_muzyk");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMuzyk"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Imie");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Nazwisko");

                    b.Property<string>("Pseudonim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Pseudonim");

                    b.HasKey("IdMuzyk");

                    b.ToTable("Muzyk");
                });

            modelBuilder.Entity("Przykład2.Models.Utwor", b =>
                {
                    b.Property<int>("IdUtwor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdUtwor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtwor"));

                    b.Property<float>("CzasTrwania")
                        .HasColumnType("real")
                        .HasColumnName("CzasTrwania");

                    b.Property<int>("IdAlbum")
                        .HasColumnType("int")
                        .HasColumnName("IdAlbum");

                    b.Property<string>("NazwaUtworu")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NazwaUtworu");

                    b.HasKey("IdUtwor");

                    b.HasIndex("IdAlbum");

                    b.ToTable("Utwor");
                });

            modelBuilder.Entity("Przykład2.Models.WykonawcaUtwor", b =>
                {
                    b.Property<int>("IdWMuzyk")
                        .HasColumnType("int")
                        .HasColumnName("IdWMuzyk");

                    b.Property<int>("IdWUtwor")
                        .HasColumnType("int")
                        .HasColumnName("IdWUtwor");

                    b.HasKey("IdWMuzyk", "IdWUtwor");

                    b.HasIndex("IdWUtwor");

                    b.ToTable("WykonawcaUtwor");
                });

            modelBuilder.Entity("Przykład2.Models.Wytwornia", b =>
                {
                    b.Property<int>("IdWytwornia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdWytwornia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWytwornia"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nazwa");

                    b.HasKey("IdWytwornia");

                    b.ToTable("Wytwornia");
                });

            modelBuilder.Entity("Przykład2.Models.Album", b =>
                {
                    b.HasOne("Przykład2.Models.Wytwornia", "Wytwornia")
                        .WithMany("Albumy")
                        .HasForeignKey("IdWytwornia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wytwornia");
                });

            modelBuilder.Entity("Przykład2.Models.Utwor", b =>
                {
                    b.HasOne("Przykład2.Models.Album", "Album")
                        .WithMany("Utwory")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Przykład2.Models.WykonawcaUtwor", b =>
                {
                    b.HasOne("Przykład2.Models.Muzyk", "Muzyk")
                        .WithMany("WykonawcyUtwor")
                        .HasForeignKey("IdWMuzyk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Przykład2.Models.Utwor", "Utwor")
                        .WithMany("WykonawcyUtwor")
                        .HasForeignKey("IdWUtwor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Muzyk");

                    b.Navigation("Utwor");
                });

            modelBuilder.Entity("Przykład2.Models.Album", b =>
                {
                    b.Navigation("Utwory");
                });

            modelBuilder.Entity("Przykład2.Models.Muzyk", b =>
                {
                    b.Navigation("WykonawcyUtwor");
                });

            modelBuilder.Entity("Przykład2.Models.Utwor", b =>
                {
                    b.Navigation("WykonawcyUtwor");
                });

            modelBuilder.Entity("Przykład2.Models.Wytwornia", b =>
                {
                    b.Navigation("Albumy");
                });
#pragma warning restore 612, 618
        }
    }
}
