// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Przykład4.Contexts;

#nullable disable

namespace Przykład4.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240613155204_add test data to backpacks table")]
    partial class addtestdatatobackpackstable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Przykład4.Models.Backpack", b =>
                {
                    b.Property<int>("BackpackCharacterId")
                        .HasColumnType("int")
                        .HasColumnName("CharacterId");

                    b.Property<int>("BackpackItemId")
                        .HasColumnType("int")
                        .HasColumnName("ItemId");

                    b.Property<int>("BackpackAmount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.HasKey("BackpackCharacterId", "BackpackItemId");

                    b.HasIndex("BackpackItemId");

                    b.ToTable("backpacks");

                    b.HasData(
                        new
                        {
                            BackpackCharacterId = 1,
                            BackpackItemId = 1,
                            BackpackAmount = 1
                        },
                        new
                        {
                            BackpackCharacterId = 2,
                            BackpackItemId = 2,
                            BackpackAmount = 2
                        },
                        new
                        {
                            BackpackCharacterId = 3,
                            BackpackItemId = 3,
                            BackpackAmount = 3
                        });
                });

            modelBuilder.Entity("Przykład4.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterId"));

                    b.Property<int>("CharacterCurrentWeight")
                        .HasColumnType("int")
                        .HasColumnName("CurrentWei");

                    b.Property<string>("CharacterFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("CharacterLastName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("LastName");

                    b.Property<int>("CharacterMaxWeight")
                        .HasColumnType("int")
                        .HasColumnName("MaxWeight");

                    b.HasKey("CharacterId");

                    b.ToTable("characters");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            CharacterCurrentWeight = 0,
                            CharacterFirstName = "TestCharacterFirstName",
                            CharacterLastName = "TestCharacterLastName",
                            CharacterMaxWeight = 100
                        },
                        new
                        {
                            CharacterId = 2,
                            CharacterCurrentWeight = 20,
                            CharacterFirstName = "TestCharacterFirstName2",
                            CharacterLastName = "TestCharacterLastName2",
                            CharacterMaxWeight = 120
                        },
                        new
                        {
                            CharacterId = 3,
                            CharacterCurrentWeight = 30,
                            CharacterFirstName = "TestCharacterFirstName3",
                            CharacterLastName = "TestCharacterLastName3",
                            CharacterMaxWeight = 130
                        });
                });

            modelBuilder.Entity("Przykład4.Models.CharacterTitle", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("CharacterId");

                    b.Property<int>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("TitleId");

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("AcquiredAt");

                    b.HasKey("CharacterId", "TitleId");

                    b.HasIndex("TitleId");

                    b.ToTable("character_titles");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            TitleId = 1,
                            AcquiredAt = new DateTime(2024, 6, 13, 17, 52, 4, 625, DateTimeKind.Local).AddTicks(5360)
                        },
                        new
                        {
                            CharacterId = 2,
                            TitleId = 2,
                            AcquiredAt = new DateTime(2024, 6, 13, 17, 52, 4, 643, DateTimeKind.Local).AddTicks(930)
                        },
                        new
                        {
                            CharacterId = 3,
                            TitleId = 3,
                            AcquiredAt = new DateTime(2024, 6, 13, 17, 52, 4, 643, DateTimeKind.Local).AddTicks(950)
                        });
                });

            modelBuilder.Entity("Przykład4.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("ItemWeight")
                        .HasColumnType("int")
                        .HasColumnName("Weight");

                    b.HasKey("ItemId");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ItemName = "TestItem",
                            ItemWeight = 10
                        },
                        new
                        {
                            ItemId = 2,
                            ItemName = "TestItem2",
                            ItemWeight = 20
                        },
                        new
                        {
                            ItemId = 3,
                            ItemName = "TestItem3",
                            ItemWeight = 30
                        });
                });

            modelBuilder.Entity("Przykład4.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("TitleId");

                    b.ToTable("titles");

                    b.HasData(
                        new
                        {
                            TitleId = 1,
                            TitleName = "TestTitle"
                        },
                        new
                        {
                            TitleId = 2,
                            TitleName = "TestTitle2"
                        },
                        new
                        {
                            TitleId = 3,
                            TitleName = "TestTitle3"
                        });
                });

            modelBuilder.Entity("Przykład4.Models.Backpack", b =>
                {
                    b.HasOne("Przykład4.Models.Character", "Character")
                        .WithMany("Backpacks")
                        .HasForeignKey("BackpackCharacterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Przykład4.Models.Item", "Item")
                        .WithMany("Backpacks")
                        .HasForeignKey("BackpackItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Przykład4.Models.CharacterTitle", b =>
                {
                    b.HasOne("Przykład4.Models.Character", "Character")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Przykład4.Models.Title", "Title")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Przykład4.Models.Character", b =>
                {
                    b.Navigation("Backpacks");

                    b.Navigation("CharacterTitles");
                });

            modelBuilder.Entity("Przykład4.Models.Item", b =>
                {
                    b.Navigation("Backpacks");
                });

            modelBuilder.Entity("Przykład4.Models.Title", b =>
                {
                    b.Navigation("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
